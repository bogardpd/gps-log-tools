# FILES AND FOLDERS

[folders]
auto_root   = "~/OneDrive/Projects/Driving-Logs"
import_root = "~/OneDrive/Import/"
[folders.raw]
bad_elf     = "Raw-Data/bad_elf"
mytracks    = "Raw-Data/mytracks"

[files]
canonical_kml    = "driving_canonical.kml"
canonical_backup = "./.Backup/driving_canonical.backup.kml"
output_kmz       = "Driving.kmz"


# TIMESTAMP FORMATS

[timestamps]
kml_name = "%Y-%m-%d %H:%M:%SZ"
[timestamps.raw]
bad_elf  = "%Y%m%dT%H%M%SZ"
mytracks = "%Y%m%dT%H%M%SZ"


# Multiplier needed to convert each device's native speed unit into meters/sec.
[speed_multiplier]
bad_elf  = 1.0      # m/s
garmin   = 1.0      # m/s
mytracks = 0.277778 # km/h


# IMPORT CONFIGURATION

[import]
min_points = 1 # Only keep linestrings with at least this many points
  
[import.gpx]

# Configure which scripts are run on GPX files from different devices (_default
# configuration is used if a GPX file doesn't match any of the other devices.)
# Each script has a script.enabled flag. If enabled is false, the script is not
# run, and the script's other parameters do not need to be set.
#
# SCRIPTS
#
# filter_speed
#   Filters low speeds from a GPX file.
#   filter_speed.enabled (bool): Enables or disables this script.
#   filter_speed.min_speed: Minimum speed to keep (meters per second).
#   filter_speed.rolling_window: Length of rolling median window for avoiding
#     outliers.
#   filter_speed.method: (str "center"|"extended"): "center" centers the #    #     rolling window. "extended" uses both a left- and right-aligned window, and
#     only rejects points if they fall below the minimum speed in both
#     windows.   
#
# merge_segments
#   Joins consecutive track segments within a track.
#   merge_segments.enabled (bool): Enables or disables this script.
#   merge_segments.max_seconds (int): Segments with a time gap between them of
#     greater than this number of seconds will not be joined.
#
# split_segments
#   Splits individual track segments into multiple segments when there are gaps
#   of time where no points are recorded.
#   split_segments.enabled (bool): Enables or disables this script.
#   split_segments.threshold (int): The minimum time gap in seconds between
#     points needed to create a split.
#
# trim
#   Removes no-motion points at start or end of a segment.
#   trim.enabled (bool): Enables or disables this script.
#
# simplify
#   Reduces the number of points in track segments by removing points that
#   won't significantly change the shape of the segment (e.g. linear points on a
#   straight portion of the segment). Uses a spherical Ramer-Douglas-Peucker
#   simplification algorithm.
#   simplify.enabled (bool): Enables or disables this script.
#   simplify.epsilon (float): The epsilon parameter for the RDP algorithm.
#     Determines the amount of error tolerated in the simplification; higher
#     values result in fewer points but less well-fitting track segments. A good
#     balanced value for driving tracks is 2e-6.

[import.gpx._default]
filter_speed.enabled = false
merge_segments.enabled = false
split_segments.enabled = false
trim.enabled = false
simplify.enabled = false

[import.gpx.bad_elf] # Bad Elf GPS Pro+
filter_speed.enabled = false # Already filtered in device hardware.
merge_segments.enabled = false
split_segments.enabled = true
split_segments.threshold = 300
trim.enabled = false # Since the Bad Elf device is set to only record above a minimum speed threshold, trim is not needed.
simplify.enabled = true
simplify.epsilon = 2e-6

[import.gpx.garmin] # Garmin DriveSmart and Garmin n√ºvi devices
filter_speed.enabled = false
merge_segments.enabled = true
merge_segments.max_seconds = 600
split_segments.enabled = false
trim.enabled = false
simplify.enabled = false
    
[import.gpx.mytracks] # myTracks iOS app
filter_speed.enabled = true
filter_speed.min_speed_m_s = 2.2352 # 5 MPH
filter_speed.rolling_window = 25
filter_speed.method = "center"
merge_segments.enabled = false
split_segments.enabled = true
split_segments.threshold = 300
trim.enabled = false
simplify.enabled = true
simplify.epsilon = 2e-6

# Tracks and track segments to ignore when importing. Tracks and track segments
# are identified by a UTC timestamp of their first waypoint.
[import.ignore]
trk = [ 
  # GPX Tracks to ignore.
  2015-10-11T15:37:00+00:00,
  2016-05-06T15:40:01+00:00,
  2016-05-06T22:59:02+00:00,
  2016-05-07T02:00:00+00:00,
  2016-09-02T19:18:05+00:00,
  2017-07-15T21:58:02+00:00,
  2017-09-19T22:50:46+00:00,
  2017-12-19T03:44:05+00:00,
  2018-03-30T14:27:05+00:00,
  2018-04-16T20:16:58+00:00,
  2018-04-18T21:53:16+00:00,
  2018-05-17T23:31:20+00:00,
  2018-06-12T23:01:29+00:00,
  2018-06-12T23:51:41+00:00,
  2018-06-13T00:20:59+00:00,
  2018-12-08T15:53:00+00:00,
  2019-04-25T01:23:08+00:00,
  2019-08-18T14:11:48+00:00,
  2019-09-01T19:46:33+00:00,
  2020-07-06T23:23:54+00:00,
  2020-07-25T16:00:50+00:00,
  2021-08-02T16:14:10+00:00,
  2021-08-02T19:04:43+00:00,
  2021-08-02T19:50:55+00:00,
  2021-10-11T03:18:43+00:00,
  2021-10-11T04:15:42+00:00,
  2022-01-10T16:49:29+00:00, # Track has offset error
  2022-04-01T01:12:56+00:00, # Amy driving
]
trkseg = [
  # Individual track segments to ignore. (All track segments in a track ignored
  # above will also be ignored.)      
  2021-10-03T18:31:26-04:00,
]